package proyecto.vista;

import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.Comparator;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyecto.controlador.ProductoController;
import proyecto.modelo.Producto;
import proyecto.modelo.Producto;
import proyecto.vista.form_RegistraProducto;
import com.lowagie.text.Chunk;
import com.lowagie.text.Document;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
import java.awt.Color;
import java.io.FileOutputStream;
import java.text.SimpleDateFormat;
import java.util.Date;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.PageSize;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Chunk;
import com.lowagie.text.FontFactory;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfPCell;
import java.awt.Color;

// Utilidades Java
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

// Swing
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author User0
 */
public class form_JefeAbasGestionInventario extends javax.swing.JFrame {

    /**
     * Creates new form form_SistemaEmpleadoPanel
     */
    public form_JefeAbasGestionInventario() {
        initComponents();
        configurarTablaDetalleOrden();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jTextField6 = new javax.swing.JTextField();
        jMenuItem1 = new javax.swing.JMenuItem();
        JP_Sistema = new javax.swing.JTabbedPane();
        JP_Productos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btnEliminarProducto = new javax.swing.JButton();
        btnRegistrarProducto = new javax.swing.JButton();
        cmbMarcaBusqueda = new javax.swing.JComboBox<>();
        btnCerrarSesion = new javax.swing.JToggleButton();
        btnDesc = new javax.swing.JButton();
        btnAsc = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        lblLogin = new javax.swing.JLabel();
        JP_StockCritico = new javax.swing.JPanel();
        btnBuscarStockCritico = new javax.swing.JButton();
        txtBusquedaStockCritico = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStockCritico = new javax.swing.JTable();
        btnExportarStockCritico = new javax.swing.JButton();
        btnVisualizarProductoDetalle = new javax.swing.JButton();
        cmbMarcaStockCritico = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDetalleProducto = new javax.swing.JTextArea();
        btnCerrarSesion1 = new javax.swing.JToggleButton();
        lblLogin2 = new javax.swing.JLabel();
        JP_GenOrdenesCompra = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetalleOrden = new javax.swing.JTable();
        btnGenerarPDF1 = new javax.swing.JToggleButton();
        cmbUbicacionOrden = new javax.swing.JComboBox<>();
        cmbModeloOrden = new javax.swing.JComboBox<>();
        cmbMarcaOrden = new javax.swing.JComboBox<>();
        txtBusquedaOrden = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        lblCantidad = new javax.swing.JLabel();
        btnGenerarOrdenCompra = new javax.swing.JToggleButton();
        cmbProveedorOrden = new javax.swing.JComboBox<>();
        cmbMarcaBusqueda1 = new javax.swing.JComboBox<>();
        btnEliminar1 = new javax.swing.JButton();
        lblLogin1 = new javax.swing.JLabel();
        btnCerrarSesion2 = new javax.swing.JToggleButton();

        jButton1.setText("jButton1");

        jTextField6.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre del Proveedor"));

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Panel de Gestión de Inventario");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        JP_Sistema.setBackground(new java.awt.Color(255, 184, 35));

        JP_Productos.setBackground(new java.awt.Color(255, 241, 202));
        JP_Productos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblProductos);

        JP_Productos.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 690, 340));

        btnEliminarProducto.setBackground(new java.awt.Color(255, 204, 204));
        btnEliminarProducto.setText("Eliminar producto");
        btnEliminarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductoActionPerformed(evt);
            }
        });
        JP_Productos.add(btnEliminarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 490, 150, 30));

        btnRegistrarProducto.setBackground(new java.awt.Color(255, 255, 204));
        btnRegistrarProducto.setText("Ventana Registro Producto");
        btnRegistrarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarProductoActionPerformed(evt);
            }
        });
        JP_Productos.add(btnRegistrarProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 490, 210, 30));

        cmbMarcaBusqueda.setBackground(new java.awt.Color(255, 227, 187));
        cmbMarcaBusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca", "Samsung", "Redmi", "Huawei", "Motorola", "POCO", "Honor", "ZTE", "LG", "Nokia", "Vivo", "Tecno", "Itel", "Meizu", "Etoway", "JTEl", "SPARK", "Lotn", "Snapnini", "Sky Rock", "Sole", "Very Kool", "Logic", "Verde", "Gol", "Movie", " " }));
        cmbMarcaBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaBusquedaActionPerformed(evt);
            }
        });
        JP_Productos.add(cmbMarcaBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 130, -1));

        btnCerrarSesion.setBackground(new java.awt.Color(255, 153, 153));
        btnCerrarSesion.setText("Cerrar sesión");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });
        JP_Productos.add(btnCerrarSesion, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, -1, 30));

        btnDesc.setBackground(new java.awt.Color(255, 227, 187));
        btnDesc.setText("DESC");
        btnDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescActionPerformed(evt);
            }
        });
        JP_Productos.add(btnDesc, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 110, 70, -1));

        btnAsc.setBackground(new java.awt.Color(255, 227, 187));
        btnAsc.setText("ASC");
        btnAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAscActionPerformed(evt);
            }
        });
        JP_Productos.add(btnAsc, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 110, 60, 20));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        JP_Productos.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 390, -1));

        lblLogin.setFont(new java.awt.Font("Yu Gothic", 1, 40)); // NOI18N
        lblLogin.setForeground(new java.awt.Color(0, 48, 146));
        lblLogin.setText("GESTIÓN PRODUCTOS");
        JP_Productos.add(lblLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, 600, 80));

        JP_Sistema.addTab("Productos", JP_Productos);

        JP_StockCritico.setBackground(new java.awt.Color(255, 233, 154));
        JP_StockCritico.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnBuscarStockCritico.setBackground(new java.awt.Color(255, 230, 225));
        btnBuscarStockCritico.setText("Buscar");
        JP_StockCritico.add(btnBuscarStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 100, -1, -1));
        JP_StockCritico.add(txtBusquedaStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 500, -1));

        tblStockCritico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tblStockCritico);

        JP_StockCritico.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 680, 180));

        btnExportarStockCritico.setBackground(new java.awt.Color(255, 153, 51));
        btnExportarStockCritico.setText("Exportar Stock Crítico PDF");
        JP_StockCritico.add(btnExportarStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 210, 30));

        btnVisualizarProductoDetalle.setBackground(new java.awt.Color(144, 209, 202));
        btnVisualizarProductoDetalle.setText("Visualizar");
        btnVisualizarProductoDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarProductoDetalleActionPerformed(evt);
            }
        });
        JP_StockCritico.add(btnVisualizarProductoDetalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, 160, 30));

        cmbMarcaStockCritico.setBackground(new java.awt.Color(255, 230, 225));
        cmbMarcaStockCritico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca", "Samsung", "Redmi", "Huawei", "Motorola", "POCO", "Honor", "ZTE", "LG", "Nokia", "Vivo", "Tecno", "Itel", "Meizu", "Etoway", "JTEl", "SPARK", "Lotn", "Snapnini", "Sky Rock", "Sole", "Very Kool", "Logic", "Verde", "Gol", "Movie" }));
        JP_StockCritico.add(cmbMarcaStockCritico, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, -1, -1));

        txtDetalleProducto.setColumns(20);
        txtDetalleProducto.setRows(5);
        txtDetalleProducto.setText("\n");
        jScrollPane4.setViewportView(txtDetalleProducto);

        JP_StockCritico.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 430, 150));

        btnCerrarSesion1.setBackground(new java.awt.Color(255, 153, 153));
        btnCerrarSesion1.setText("Cerrar sesión");
        btnCerrarSesion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesion1ActionPerformed(evt);
            }
        });
        JP_StockCritico.add(btnCerrarSesion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, -1, 30));

        lblLogin2.setFont(new java.awt.Font("Yu Gothic", 1, 40)); // NOI18N
        lblLogin2.setForeground(new java.awt.Color(0, 48, 146));
        lblLogin2.setText("STOCK");
        JP_StockCritico.add(lblLogin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 30, 600, 80));

        JP_Sistema.addTab("Verificación de Stock", JP_StockCritico);

        JP_GenOrdenesCompra.setBackground(new java.awt.Color(255, 233, 154));
        JP_GenOrdenesCompra.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDetalleOrden.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tblDetalleOrden);

        JP_GenOrdenesCompra.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 690, 160));

        btnGenerarPDF1.setBackground(new java.awt.Color(178, 205, 156));
        btnGenerarPDF1.setText("Generar PDF");
        btnGenerarPDF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarPDF1ActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(btnGenerarPDF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 300, 110, -1));

        cmbUbicacionOrden.setBackground(new java.awt.Color(234, 250, 234));
        cmbUbicacionOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ubicación", "Cajamarca", "Lima", " " }));
        cmbUbicacionOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUbicacionOrdenActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(cmbUbicacionOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 280, 30));

        cmbModeloOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Modelo", "Note 10 5G", "M51", "S7", "14 Note Pro", "K55", "Note 14", "16 5G", "16", "A32", "A50 5G", "A30 5G", "M4 Pro 5G", "200", "Note 12 Pro", "Note 14M", "A10", "Note 12S", "A25 5G", "Note 10S", "Note 10 Pro", "A12", "4.2", "30 C", "X6A", "X7B", "Note 13", "Note 13C", "C31", "14C", "M6 Note", "Y6 Prime", "A Cool", "F Cool", "P Cool", "Y6 2017", "Y6 2019", "B154 Pro", "Y7 Pro 2019", "A03", "E22i", "A09", "E15", "Spark GO1", "A03s", "K22", "Y15S", "A73", "Play 9A", "A9X", "X5 6 Plus", "A3X", "A06", "A05", "A05S", "Blade A05", "Android 6.0", "10 5G", "Mobile 2.5D", "BL 54 prime", "A55", "A35", "Q3", "3", "2", "C100", "I129a", "1Valeaa", "i29a", "F5G", " " }));
        cmbModeloOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModeloOrdenActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(cmbModeloOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, 160, 30));

        cmbMarcaOrden.setBackground(new java.awt.Color(234, 250, 234));
        cmbMarcaOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca", "Samsung", "Redmi", "Huawei", "Motorola", "POCO", "Honor", "ZTE", "LG", "Nokia", "Vivo", "Tecno", "Itel", "Meizu", "Etoway", "JTEl", "SPARK", "Lotn", "Snapnini", "Sky Rock", "Sole", "Very Kool", "Logic", "Verde", "Gol", "Movie", " " }));
        JP_GenOrdenesCompra.add(cmbMarcaOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 110, 30));
        JP_GenOrdenesCompra.add(txtBusquedaOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 500, -1));

        txtCantidad.setBackground(new java.awt.Color(234, 250, 234));
        JP_GenOrdenesCompra.add(txtCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 130, 30));

        lblCantidad.setText("Cantidad");
        JP_GenOrdenesCompra.add(lblCantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 100, -1));

        btnGenerarOrdenCompra.setBackground(new java.awt.Color(234, 250, 234));
        btnGenerarOrdenCompra.setText("Generar Orden de Compra");
        btnGenerarOrdenCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarOrdenCompraActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(btnGenerarOrdenCompra, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 280, -1));

        cmbProveedorOrden.setBackground(new java.awt.Color(234, 250, 234));
        cmbProveedorOrden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Proveedores", "RIVACELL S.A.C. ", " " }));
        cmbProveedorOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbProveedorOrdenActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(cmbProveedorOrden, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 280, -1));

        cmbMarcaBusqueda1.setBackground(new java.awt.Color(255, 204, 255));
        cmbMarcaBusqueda1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Marca", "Samsung", "Redmi", "Huawei", "Motorola", "POCO", "Honor", "ZTE", "LG", "Nokia", "Vivo", "Tecno", "Itel", "Meizu", "Etoway", "JTEl", "SPARK", "Lotn", "Snapnini", "Sky Rock", "Sole", "Very Kool", "Logic", "Verde", "Gol", "Movie", " " }));
        cmbMarcaBusqueda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMarcaBusqueda1ActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(cmbMarcaBusqueda1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 160, -1));

        btnEliminar1.setBackground(new java.awt.Color(255, 240, 189));
        btnEliminar1.setText("Eliminar");
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(btnEliminar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 300, 90, -1));

        lblLogin1.setFont(new java.awt.Font("Yu Gothic", 1, 40)); // NOI18N
        lblLogin1.setForeground(new java.awt.Color(0, 48, 146));
        lblLogin1.setText("ORDENES DE COMPRA");
        JP_GenOrdenesCompra.add(lblLogin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 600, 60));

        btnCerrarSesion2.setBackground(new java.awt.Color(255, 153, 153));
        btnCerrarSesion2.setText("Cerrar sesión");
        btnCerrarSesion2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesion2ActionPerformed(evt);
            }
        });
        JP_GenOrdenesCompra.add(btnCerrarSesion2, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 490, -1, 30));

        JP_Sistema.addTab("Generación de Ordenes de Compra", JP_GenOrdenesCompra);

        getContentPane().add(JP_Sistema, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 740, 570));

        setSize(new java.awt.Dimension(739, 583));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cargarTablaProductos() {
        ProductoController controller = new ProductoController();
        List<Producto> productos = controller.listarProductos();

        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Marca");
        modeloTabla.addColumn("Modelo");
        modeloTabla.addColumn("Precio");

        for (Producto p : productos) {
            Object[] fila = {p.getMarca(), p.getModelo(), p.getPrecio()};
            modeloTabla.addRow(fila);
        }

        tblProductos.setModel(modeloTabla);
    }

    private void configurarTablaDetalleOrden() {
        DefaultTableModel modelo = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return Boolean.class; // Selección
                    case 1:
                        return String.class;  // Marca
                    case 2:
                        return String.class;  // Modelo
                    case 3:
                        return Integer.class; // Cantidad
                    case 4:
                        return Double.class;  // Precio Unitario
                    case 5:
                        return Double.class;  // Total
                    default:
                        return Object.class;
                }
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return column == 0; // Solo el checkbox editable
            }
        };

        modelo.addColumn("Seleccionar");
        modelo.addColumn("Proveedor");
        modelo.addColumn("Marca");
        modelo.addColumn("Modelo");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Precio Unitario");
        modelo.addColumn("Total");

        tblDetalleOrden.setModel(modelo);
    }


    private void btnVisualizarProductoDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarProductoDetalleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnVisualizarProductoDetalleActionPerformed

    private void cmbProveedorOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbProveedorOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbProveedorOrdenActionPerformed


    private void cmbMarcaBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaBusquedaActionPerformed

        String marcaSeleccionada = cmbMarcaBusqueda.getSelectedItem().toString().trim();

        ProductoController controller = new ProductoController();
        List<Producto> productos = controller.listarProductos();

        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Marca");
        modeloTabla.addColumn("Modelo");
        modeloTabla.addColumn("Precio");

        for (Producto p : productos) {
            String marca = p.getMarca() != null ? p.getMarca().trim() : "";

            if (marcaSeleccionada.equalsIgnoreCase("Marca") || marca.equalsIgnoreCase(marcaSeleccionada)) {
                Object[] fila = {p.getMarca(), p.getModelo(), p.getPrecio()};
                modeloTabla.addRow(fila);
            }
        }

        tblProductos.setModel(modeloTabla);
    }//GEN-LAST:event_cmbMarcaBusquedaActionPerformed


    private void btnRegistrarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarProductoActionPerformed
        //abre elr egistro JDialogo form_RegistroProducot
        // Abrir el JDialog de registro
        form_RegistraProducto dialogo = new form_RegistraProducto((java.awt.Frame) javax.swing.SwingUtilities.getWindowAncestor(this), true);
        dialogo.setLocationRelativeTo(this);
        dialogo.setVisible(true);

        // Si el producto fue registrado, actualizar la tabla
        if (dialogo.isProductoRegistrado()) {
            cargarTablaProductos();
        }

    }//GEN-LAST:event_btnRegistrarProductoActionPerformed

    private void btnEliminarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductoActionPerformed
        int filaSeleccionada = tblProductos.getSelectedRow();

        if (filaSeleccionada == -1) {
            JOptionPane.showMessageDialog(this, "Por favor selecciona un producto para eliminar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String marca = tblProductos.getValueAt(filaSeleccionada, 0).toString();   // Columna 0 = Marca
        String modelo = tblProductos.getValueAt(filaSeleccionada, 1).toString();  // Columna 1 = Modelo

        int confirmacion = JOptionPane.showConfirmDialog(this,
                "¿Estás seguro que deseas eliminar el producto:\nMarca: " + marca + "\nModelo: " + modelo + "?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION);

        if (confirmacion == JOptionPane.YES_OPTION) {
            ProductoController controller = new ProductoController();
            boolean eliminado = controller.eliminarProducto(modelo, marca); // modelo primero, luego marca

            if (eliminado) {
                JOptionPane.showMessageDialog(this, "Producto eliminado correctamente.");
                cmbMarcaBusquedaActionPerformed(null); // refresca tabla filtrada
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo eliminar el producto.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

        cargarTablaProductos();
    }//GEN-LAST:event_btnEliminarProductoActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
        int opcion = JOptionPane.showConfirmDialog(
                this,
                "¿Estás seguro de que deseas cerrar sesión?",
                "Confirmar cierre de sesión",
                JOptionPane.YES_NO_OPTION
        );

        if (opcion == JOptionPane.YES_OPTION) {
            // Abre el formulario de login
            form_login login = new form_login();
            login.setLocationRelativeTo(null);
            login.setVisible(true);

            // Cierra la ventana actual
            this.dispose();
        }
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    private void mostrarProductosEnTabla(List<Producto> productos) {
        DefaultTableModel modeloTabla = new DefaultTableModel();
        modeloTabla.addColumn("Marca");
        modeloTabla.addColumn("Modelo");
        modeloTabla.addColumn("Precio");

        for (Producto p : productos) {
            Object[] fila = {p.getMarca(), p.getModelo(), p.getPrecio()};
            modeloTabla.addRow(fila);
        }

        tblProductos.setModel(modeloTabla);
    }

    private void btnAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAscActionPerformed
        String marcaSeleccionada = cmbMarcaBusqueda.getSelectedItem().toString().trim();

        ProductoController controller = new ProductoController();
        List<Producto> productos = controller.listarProductos();

        if (!marcaSeleccionada.equalsIgnoreCase("Marca")) {
            productos.removeIf(p -> !p.getMarca().equalsIgnoreCase(marcaSeleccionada));
        }

        productos.sort(Comparator.comparingDouble(Producto::getPrecio));

        mostrarProductosEnTabla(productos);
    }//GEN-LAST:event_btnAscActionPerformed

    private void btnDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescActionPerformed
        String marcaSeleccionada = cmbMarcaBusqueda.getSelectedItem().toString().trim();

        ProductoController controller = new ProductoController();
        List<Producto> productos = controller.listarProductos();

        if (!marcaSeleccionada.equalsIgnoreCase("Marca")) {
            productos.removeIf(p -> !p.getMarca().equalsIgnoreCase(marcaSeleccionada));
        }

        productos.sort(Comparator.comparingDouble(Producto::getPrecio).reversed());

        mostrarProductosEnTabla(productos);
    }//GEN-LAST:event_btnDescActionPerformed

    private void cmbMarcaBusqueda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMarcaBusqueda1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMarcaBusqueda1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void cmbModeloOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModeloOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbModeloOrdenActionPerformed

    public void generarPDFOrdenCompra() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Guardar PDF de Orden de Compra");

        int userSelection = fileChooser.showSaveDialog(this);

        if (userSelection == JFileChooser.APPROVE_OPTION) {
            File archivoPDF = fileChooser.getSelectedFile();
            if (!archivoPDF.getAbsolutePath().endsWith(".pdf")) {
                archivoPDF = new File(archivoPDF.getAbsolutePath() + ".pdf");
            }

            try {
                Document documento = new Document(PageSize.A4.rotate());
                PdfWriter.getInstance(documento, new FileOutputStream(archivoPDF));
                documento.open();

                // Encabezado
                Font tituloFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18, Font.BOLD, Color.RED);
                Paragraph titulo = new Paragraph("ORDEN DE COMPRA - MULTITEC D & J MEPRESA", tituloFont);
                titulo.setAlignment(Element.ALIGN_CENTER);
                documento.add(titulo);

                documento.add(new Paragraph(" "));
                documento.add(new Paragraph("RUC: 20547854123"));
                documento.add(new Paragraph("Generado por: Jefe de Abastecimiento"));
                documento.add(new Paragraph("Fecha y hora: " + new SimpleDateFormat("dd/MM/yyyy HH:mm:ss").format(new Date())));
                documento.add(new Paragraph(" "));

                // Crear tabla
                PdfPTable tabla = new PdfPTable(6); // columnas
                tabla.setWidthPercentage(100);

                String[] encabezados = {"Proveedor", "Marca", "Modelo", "Cantidad", "Precio Unitario", "Total"};
                for (String enc : encabezados) {
                    PdfPCell cell = new PdfPCell(new Phrase(enc));
                    cell.setBackgroundColor(Color.LIGHT_GRAY);
                    tabla.addCell(cell);
                }

                DefaultTableModel modeloTabla = (DefaultTableModel) tblDetalleOrden.getModel();
                int totalFilas = modeloTabla.getRowCount();

                for (int i = 0; i < totalFilas; i++) {
                    Boolean seleccionado = Boolean.valueOf(modeloTabla.getValueAt(i, 0).toString());
                    if (seleccionado) {
                        tabla.addCell(modeloTabla.getValueAt(i, 1).toString()); // Proveedor
                        tabla.addCell(modeloTabla.getValueAt(i, 2).toString()); // Marca
                        tabla.addCell(modeloTabla.getValueAt(i, 3).toString()); // Modelo
                        tabla.addCell(modeloTabla.getValueAt(i, 4).toString()); // Cantidad
                        tabla.addCell(modeloTabla.getValueAt(i, 5).toString()); // Precio Unitario
                        tabla.addCell(modeloTabla.getValueAt(i, 6).toString()); // Total
                    }
                }

                documento.add(tabla);
                documento.close();

                JOptionPane.showMessageDialog(this, "PDF generado correctamente: " + archivoPDF.getAbsolutePath());

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al generar el PDF: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }


    private void btnGenerarOrdenCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarOrdenCompraActionPerformed
        String proveedor = cmbProveedorOrden.getSelectedItem().toString();
        String marca = cmbMarcaOrden.getSelectedItem().toString();
        String modelo = cmbModeloOrden.getSelectedItem().toString();
        String ubicacion = cmbUbicacionOrden.getSelectedItem().toString();
        String cantidadStr = txtCantidad.getText().trim();

        // Validar proveedor vs ubicación
        if (proveedor.equalsIgnoreCase("RIVACELL S.A.C.") && !ubicacion.equalsIgnoreCase("Cajamarca")) {
            JOptionPane.showMessageDialog(this, "El proveedor RIVACELL S.A.C. solo está disponible en Cajamarca.", "Proveedor no disponible", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Validar campos vacíos
        if (marca.isEmpty() || modelo.isEmpty() || cantidadStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Campos incompletos", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int cantidad;
        try {
            cantidad = Integer.parseInt(cantidadStr);
            if (cantidad <= 0) {
                throw new NumberFormatException();
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad válida mayor a 0.", "Cantidad inválida", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Obtener precio del producto desde la lista de productos
        double precioUnitario = 0.0;
        for (Producto p : new ProductoController().listarProductos()) {
            if (p.getModelo().equalsIgnoreCase(modelo) && p.getMarca().equalsIgnoreCase(marca)) {
                precioUnitario = p.getPrecio();
                break;
            }
        }

        if (precioUnitario == 0.0) {
            JOptionPane.showMessageDialog(this, "No se encontró el producto seleccionado en la base de datos.", "Producto no disponible", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double precioTotal = cantidad * precioUnitario;

        // Agregar fila a la tabla
        DefaultTableModel modeloTabla = (DefaultTableModel) tblDetalleOrden.getModel();
        modeloTabla.addRow(new Object[]{
            false, // Checkbox
            proveedor,
            marca,
            modelo,
            cantidad,
            precioUnitario,
            precioTotal
        });

        JOptionPane.showMessageDialog(this, "Orden generada correctamente.");
    }//GEN-LAST:event_btnGenerarOrdenCompraActionPerformed

    private void btnGenerarPDF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarPDF1ActionPerformed
        generarPDFOrdenCompra();
    }//GEN-LAST:event_btnGenerarPDF1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
        DefaultTableModel modeloTabla = (DefaultTableModel) tblDetalleOrden.getModel();
        boolean haySeleccion = false;

        // Verificar si hay al menos una fila seleccionada
        for (int i = 0; i < modeloTabla.getRowCount(); i++) {
            Boolean seleccionado = Boolean.valueOf(modeloTabla.getValueAt(i, 0).toString());
            if (seleccionado != null && seleccionado) {
                haySeleccion = true;
                break;
            }
        }

        if (!haySeleccion) {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna fila para eliminar.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int respuesta = JOptionPane.showConfirmDialog(this,
                "¿Está seguro de que desea eliminar las filas seleccionadas?",
                "Confirmar eliminación",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        if (respuesta == JOptionPane.YES_OPTION) {
            // Eliminar de abajo hacia arriba
            for (int i = modeloTabla.getRowCount() - 1; i >= 0; i--) {
                Boolean seleccionado = Boolean.valueOf(modeloTabla.getValueAt(i, 0).toString());
                if (seleccionado != null && seleccionado) {
                    modeloTabla.removeRow(i);
                }
            }
            JOptionPane.showMessageDialog(this, "Filas eliminadas correctamente.");
        }
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void btnCerrarSesion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesion1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarSesion1ActionPerformed

    private void btnCerrarSesion2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesion2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCerrarSesion2ActionPerformed

    private void cmbUbicacionOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUbicacionOrdenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUbicacionOrdenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_JefeAbasGestionInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_JefeAbasGestionInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_JefeAbasGestionInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_JefeAbasGestionInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_JefeAbasGestionInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JP_GenOrdenesCompra;
    private javax.swing.JPanel JP_Productos;
    private javax.swing.JTabbedPane JP_Sistema;
    private javax.swing.JPanel JP_StockCritico;
    private javax.swing.JButton btnAsc;
    private javax.swing.JButton btnBuscarStockCritico;
    private javax.swing.JToggleButton btnCerrarSesion;
    private javax.swing.JToggleButton btnCerrarSesion1;
    private javax.swing.JToggleButton btnCerrarSesion2;
    private javax.swing.JButton btnDesc;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnEliminarProducto;
    private javax.swing.JButton btnExportarStockCritico;
    private javax.swing.JToggleButton btnGenerarOrdenCompra;
    private javax.swing.JToggleButton btnGenerarPDF1;
    private javax.swing.JButton btnRegistrarProducto;
    private javax.swing.JButton btnVisualizarProductoDetalle;
    private javax.swing.JComboBox<String> cmbMarcaBusqueda;
    private javax.swing.JComboBox<String> cmbMarcaBusqueda1;
    private javax.swing.JComboBox<String> cmbMarcaOrden;
    private javax.swing.JComboBox<String> cmbMarcaStockCritico;
    private javax.swing.JComboBox<String> cmbModeloOrden;
    private javax.swing.JComboBox<String> cmbProveedorOrden;
    private javax.swing.JComboBox<String> cmbUbicacionOrden;
    private javax.swing.JButton jButton1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblLogin;
    private javax.swing.JLabel lblLogin1;
    private javax.swing.JLabel lblLogin2;
    private javax.swing.JTable tblDetalleOrden;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblStockCritico;
    private javax.swing.JTextField txtBusquedaOrden;
    private javax.swing.JTextField txtBusquedaStockCritico;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextArea txtDetalleProducto;
    // End of variables declaration//GEN-END:variables
}
